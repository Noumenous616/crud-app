{"version":3,"sources":["components/Heading.js","context/AppReducer.js","context/State.js","components/List.js","components/main.js","components/Add.js","components/Edit.js","App.js","index.js","registerServiceWorker.js"],"names":["Heading","Navbar","color","dark","Container","NavbarBrand","href","Nav","NavItem","className","to","state","action","type","users","filter","user","id","payload","updateUser","map","InitialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","removeUser","addUser","editUser","List","useContext","console","log","ListGroup","length","ListGroupItem","key","name","Button","onClick","Main","Add","useState","setName","history","useHistory","Form","onSubmit","newUser","uuid","push","FormGroup","Label","Input","onChange","e","target","placeholder","Edit","props","selectedUser","setSelectedUser","currentUserId","match","params","useEffect","userId","find","App","style","maxWidth","margin","basename","process","exact","path","component","ReactDOM","render","document","getElementById","navigator","window","addEventListener","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error"],"mappings":"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","file":"static/js/main.b4fa0f4c.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    Navbar,\r\n    Nav,\r\n    NavItem,\r\n    NavbarBrand,\r\n    Container\r\n} from 'reactstrap';\r\n\r\nexport const Heading = () => {\r\n    return (\r\n        <div>\r\n            <Navbar color='dark' dark>\r\n                <Container>\r\n                    <NavbarBrand href='/'> CRUD App</NavbarBrand>\r\n                    <Nav>\r\n                        <NavItem>\r\n                            <Link className='btn btn-primary' to='/add'> Add Some</Link>\r\n                        </NavItem>\r\n                    </Nav>\r\n                </Container>\r\n\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}","\r\n\r\nexport default (state, action) => {\r\n    switch(action.type) {\r\n        case 'REMOVE_USER':\r\n            return {\r\n                users: state.users.filter(user => {\r\n                    return user.id !== action.payload\r\n                })\r\n            }\r\n        case 'ADD_USER':\r\n            return {\r\n                users: [action.payload, ...state.users]\r\n            }\r\n        case 'EDIT_USER':\r\n            const updateUser = action.payload\r\n            const updateUsers = state.users.map(user => {\r\n                if(user.id === updateUser.id) {\r\n                    return updateUser\r\n                }\r\n                return user;\r\n\r\n            })\r\n            return {\r\n                users: updateUsers\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n }","import React, {useReducer, createContext} from 'react';\r\nimport AppReducer from './AppReducer';\r\nimport {v4 as uuid} from 'uuid';\r\n\r\n// Initial State\r\n\r\nconst InitialState = {\r\n    users: []\r\n\r\n}\r\n\r\n// Create context\r\n\r\nexport const GlobalContext = createContext(InitialState)\r\n\r\n// Provider Component\r\n\r\nexport const GlobalProvider = ({children}) => {\r\n    const [state, dispatch] = useReducer(AppReducer, InitialState)\r\n\r\n    // Actions\r\n    const removeUser = (id) => {\r\n        dispatch({\r\n            type: 'REMOVE_USER',\r\n            payload: id\r\n        })\r\n    }\r\n\r\n    const addUser = (user) => {\r\n        dispatch({\r\n            type: 'ADD_USER',\r\n            payload: user\r\n        })\r\n    }\r\n\r\n    const editUser = (user) => {\r\n        dispatch({\r\n            type: 'EDIT_USER',\r\n            payload: user\r\n        })\r\n    }\r\n\r\n    // Actions\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            users: state.users,\r\n            removeUser,\r\n            addUser,\r\n            editUser\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}","import React, {useContext} from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport {GlobalContext} from \"../context/State\";\r\n\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Button\r\n} from 'reactstrap';\r\n\r\n\r\n\r\nexport const List = () => {\r\n    const { users, removeUser } = useContext(GlobalContext);\r\n    console.log(users);\r\n    return (\r\n       <ListGroup>\r\n           {users.length > 0 ? (\r\n               <>\r\n                   {users.map(user =>(\r\n                       <ListGroupItem className='d-lg-flex' key={user.id}>\r\n                           <strong>{user.name}</strong>\r\n                           <div className='m-lg-auto'>\r\n                               <Link className='btn btn-warning mx-2' to={`/edit/${user.id}`}>Edit</Link>\r\n                               <Button onClick={() => removeUser(user.id)} color='danger'>Delete</Button>\r\n                           </div>\r\n                       </ListGroupItem>\r\n\r\n\r\n\r\n                   ))}\r\n               </>\r\n           ) : (\r\n               <h4 className='text-center'>No User</h4>\r\n           )}\r\n\r\n\r\n\r\n       </ListGroup>\r\n    )\r\n}","import React from 'react';\r\nimport { Heading } from \"./Heading\";\r\nimport { List } from \"./List\";\r\n\r\nexport const Main = () => {\r\n    return (\r\n        <>\r\n        <Heading />\r\n        <List />\r\n        </>\r\n    )\r\n}\r\n","import React, {useContext, useState} from 'react'\r\nimport {GlobalContext} from \"../context/State\";\r\nimport {v4 as uuid} from 'uuid';\r\nimport {Link, useHistory} from 'react-router-dom'\r\n\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Button\r\n} from 'reactstrap';\r\n\r\n\r\nexport const Add = () => {\r\n    const [name, setName] = useState('');\r\n    const {addUser} = useContext(GlobalContext);\r\n    const history = useHistory();\r\n    const onSubmit = () => {\r\n        const newUser = {\r\n            id: uuid(),\r\n            name\r\n        }\r\n        addUser(newUser)\r\n        history.push('/');\r\n\r\n\r\n    }\r\n    let onChange = (e) => {\r\n        setName(e.target.value);\r\n\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={onSubmit}>\r\n            <FormGroup>\r\n                <Label>Name</Label>\r\n                <Input value={name} onChange={onChange} type='text' placeholder='Enter some'></Input>\r\n            </FormGroup>\r\n            <Button className='mx-1 my-1' type='submit'>Submit</Button>\r\n            <Link to='/' className='btn btn-danger'>Cancel</Link>\r\n        </Form>\r\n    )\r\n}\r\n","import React, {useContext, useState, useEffect} from 'react'\r\nimport {GlobalContext} from \"../context/State\";\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Button\r\n} from 'reactstrap';\r\n\r\n\r\nexport const Edit = (props) => {\r\n    const [selectedUser, setSelectedUser] = useState({\r\n        id: '',\r\n        name: ''\r\n    });\r\n    const { users, editUser} = useContext(GlobalContext);\r\n    const history = useHistory();\r\n    const currentUserId = props.match.params.id;\r\n    useEffect(() => {\r\n        const userId = currentUserId;\r\n        const selectedUser = users.find(user => user.id === userId);\r\n        setSelectedUser(selectedUser)\r\n    }, [currentUserId, users])\r\n    const onSubmit = () => {\r\n        editUser(selectedUser)\r\n        history.push('/');\r\n    }\r\n    let onChange = (e) => {\r\n        setSelectedUser({...selectedUser,[e.target.name]: e.target.value})\r\n    }\r\n    return (\r\n        <Form onSubmit={onSubmit}>\r\n            <FormGroup >\r\n                <Label>Name</Label>\r\n                <Input type='text' name='name' value={selectedUser.name} onChange={onChange} placeholder='Enter some'></Input>\r\n            </FormGroup>\r\n            <Button  className='mx-1 my-1' type='submit'>Edit</Button>\r\n            <Link to='/' className='btn btn-danger'>Cancel</Link>\r\n        </Form>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport {Main} from './components/main'\nimport {Add} from './components/Add'\nimport {Edit} from './components/Edit'\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {GlobalProvider} from '../src/context/State'\n\nlet App = () => {\n\n    return (\n      <div style={{maxWidth: '30rem', margin: '5rem auto'}}>\n          <GlobalProvider>\n              <Router basename={process.env.PUBLIC_URL}>\n                  <Switch>\n                      < Route exact path='/' component={Main}  />\n                      < Route path='/add' component={Add} />\n                      < Route path='/edit/:id' component={Edit} />\n                  </Switch>\n\n              </Router>\n          </GlobalProvider>\n\n\n      </div>\n    );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n          registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in your web app.\n                  console.log('New content is available; please refresh.');\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // \"Content is cached for offline use.\" message.\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          };\n        })\n        .catch(error => {\n          console.error('Error during service worker registration:', error);\n        });\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}